[{"/Users/sofiamoniz/Documents/aula_react/src/index.js":"1","/Users/sofiamoniz/Documents/aula_react/src/App.js":"2","/Users/sofiamoniz/Documents/aula_react/src/reportWebVitals.js":"3","/Users/sofiamoniz/Documents/aula_react/src/components/nav.js":"4","/Users/sofiamoniz/Documents/aula_react/src/pages/Home.js":"5","/Users/sofiamoniz/Documents/aula_react/src/pages/TODOList.js":"6"},{"size":543,"mtime":1638289220017,"results":"7","hashOfConfig":"8"},{"size":495,"mtime":1638453039075,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1638287004518,"results":"10","hashOfConfig":"8"},{"size":1121,"mtime":1638453740323,"results":"11","hashOfConfig":"8"},{"size":178,"mtime":1638454925272,"results":"12","hashOfConfig":"8"},{"size":2396,"mtime":1638460104499,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gv4s6s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/sofiamoniz/Documents/aula_react/src/index.js",[],["30","31"],"/Users/sofiamoniz/Documents/aula_react/src/App.js",["32"],"import React from 'react';\nimport './App.css';\nimport Nav from './components/nav';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Home from './pages/Home';\nimport TODOList from './pages/TODOList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\t\n\t\t<Router>\n\t\t\t<Nav />\t\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' exact element={<Home />} />\n\t\t\t\t<Route path='/TODOList' element={<TODOList />} />\n\t\t\t</Routes>\n\t\t</Router>\t\n\t</div>\n\n  );\n}\n\nexport default App;\n","/Users/sofiamoniz/Documents/aula_react/src/reportWebVitals.js",[],"/Users/sofiamoniz/Documents/aula_react/src/components/nav.js",["33","34","35","36","37","38"],"import React, {useState} from 'react';\nimport '../App.css';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction Nav(props){\n  const navStyle={\n    textDecoration: 'none' \n}\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link to=\"/\" style={navStyle} id=\"nav_item\">\n            <a className=\"navbar-brand\">Home</a>\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n              <Link to=\"/TODOList\" style={navStyle} id=\"nav_item\">\n                <a className=\"nav-link\">TODO list</a>\n              </Link>\n              </li>\n              </ul>\n          </div>\n        </nav>\n    )\n}\n\nexport default Nav;","/Users/sofiamoniz/Documents/aula_react/src/pages/Home.js",[],"/Users/sofiamoniz/Documents/aula_react/src/pages/TODOList.js",["39"],"import React, {useEffect, useState} from 'react';\n\nfunction TODOList(){\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = React.useState(null);\n\n    const addNewTask = () => {\n        setTasks([...tasks, newTask]);\n    };\n\n    const removeTask = (entry) => {\n        setTasks(tasks.filter(item => item !== entry));\n    };\n\n    const checkTasks = () => {\n        if(tasks.length){\n            return( \n                <div>\n                    {tasks.map(entry =>\n                        <div className=\"container\">\n                            <div className=\"row\" style={{marginTop:\"5%\"}}>\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6\">\n                                        <p>{entry}</p>\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <input type=\"button\" value=\"Delete\" name={entry} onClick={() => removeTask(entry)}/>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    )}\n                </div>\n            )\n        }\n        else{\n            return(\n                <p style={{marginTop:\"5%\"}}>Nothing to do!</p>\n                )\n        }\n    }\n\n    return (\n        <div>\n            <h1>Your TODO list</h1>\n            <div className=\"container\">\n                <div className=\"row\" style={{marginTop:\"5%\"}}>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <input type=\"text\" className=\"form-control input-normal\" placeholder=\"insert new task\" value={newTask} onChange={(event) => setNewTask(event.target.value)} />\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <input type=\"button\" onClick={addNewTask} value=\"Add\" />\n                            </div>\n                        </div>\n                    </div> \n                </div>\n            </div>\n            {checkTasks()}\n        </div>\n    );\n}\n\nexport default TODOList;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":50,"nodeType":"46","messageId":"47","endLine":4,"endColumn":54},{"ruleId":"44","severity":1,"message":"48","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":24},{"ruleId":"44","severity":1,"message":"49","line":3,"column":27,"nodeType":"46","messageId":"47","endLine":3,"endColumn":33},{"ruleId":"44","severity":1,"message":"50","line":3,"column":35,"nodeType":"46","messageId":"47","endLine":3,"endColumn":41},{"ruleId":"44","severity":1,"message":"51","line":3,"column":43,"nodeType":"46","messageId":"47","endLine":3,"endColumn":48},{"ruleId":"52","severity":1,"message":"53","line":12,"column":13,"nodeType":"54","endLine":12,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":21,"column":17,"nodeType":"54","endLine":21,"endColumn":41},{"ruleId":"44","severity":1,"message":"55","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]