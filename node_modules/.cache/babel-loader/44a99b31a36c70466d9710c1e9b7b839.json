{"ast":null,"code":"var _jsxFileName = \"/Users/sofiamoniz/Documents/aula_react/src/pages/Drivers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Drivers() {\n  _s();\n\n  const [driversList, setDriversList] = React.useState([]);\n  const [page, setPage] = React.useState(1);\n  const pageSize = 20;\n\n  const fetchState = async () => {\n    const fetchItem = await fetch('http://192.168.160.58/Formula1/api/Drivers?page=' + page + '&pagesize=' + pageSize);\n    const item = await fetchItem.json();\n    setDriversList(item.List);\n  };\n\n  const Td = ({\n    children,\n    to\n  }) => {\n    // Conditionally wrapping content into a link\n    const ContentTag = to ? Link : 'div';\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(ContentTag, {\n        to: to,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this);\n  };\n\n  const retrieveDrivers = () => {\n    if (driversList != []) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Nationality\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: driversList.map(driver => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                to: `/DriverDetails/${driver.DriverId}`,\n                children: driver.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: driver.Nationality\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)]\n            }, driver.DriverId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Page navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                onClick: changePageBackward,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                onClick: changePageForward,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for API to fetch!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const changePageForward = () => {\n    setPage(page + 1);\n    fetchState();\n  };\n\n  const changePageBackward = () => {\n    if (page > 1) {\n      setPage(page - 1);\n      fetchState();\n    }\n  };\n\n  useEffect(() => {\n    fetchState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get to know the drivers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), retrieveDrivers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Drivers, \"a3QNVUSYoJLtIXRDeraLAcJeSpU=\");\n\n_c = Drivers;\nexport default Drivers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drivers\");","map":{"version":3,"sources":["/Users/sofiamoniz/Documents/aula_react/src/pages/Drivers.js"],"names":["React","useEffect","Link","Drivers","driversList","setDriversList","useState","page","setPage","pageSize","fetchState","fetchItem","fetch","item","json","List","Td","children","to","ContentTag","retrieveDrivers","map","driver","DriverId","Name","Nationality","changePageBackward","changePageForward"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Drivers(){\n\n    const [driversList, setDriversList] = React.useState([]);\n    const [page, setPage] = React.useState(1);\n    const pageSize = 20;\n\n\n    const fetchState = async () => {\n        const fetchItem = await fetch('http://192.168.160.58/Formula1/api/Drivers?page=' + page + '&pagesize=' + pageSize);\n        const item = await fetchItem.json();\n        setDriversList(item.List);\n    };\n\n    const Td = ({ children, to }) => {\n        // Conditionally wrapping content into a link\n        const ContentTag = to ? Link : 'div';\n        return (\n          <td>\n            <ContentTag to={to}>{children}</ContentTag>\n          </td>\n        );\n      }\n\n    \n    const retrieveDrivers = () => {\n        if (driversList != []){\n            return (\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Nationality</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {driversList.map(driver =>\n                                <tr key={driver.DriverId}>\n                                    <Td to={`/DriverDetails/${driver.DriverId}`}>{driver.Name}</Td>\n                                    <td>{driver.Nationality}</td>\n                                </tr>\n                            )}  \n                        </tbody>\n                    </table>\n                    <nav aria-label=\"Page navigation\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\"><a className=\"page-link\" onClick={changePageBackward}>Previous</a></li>\n                            <li className=\"page-item\"><a className=\"page-link\" onClick={changePageForward}>Next</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div>\n                    <p>Waiting for API to fetch!</p>\n                </div>\n            )\n        }\n        \n    }\n\n    const changePageForward = () => {\n        setPage(page+1);\n        fetchState();\n    }\n\n    const changePageBackward = () => {\n        if (page > 1){\n            setPage(page-1);\n            fetchState();\n        }\n    }\n    \n    useEffect(() => {\n        fetchState();\n    },[])\n\n    return(\n        <div>\n            <h1>Get to know the drivers</h1>\n            {retrieveDrivers()}\n        </div>\n        \n    )\n}\n\nexport default Drivers;"]},"metadata":{},"sourceType":"module"}