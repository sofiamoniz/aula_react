{"ast":null,"code":"var _jsxFileName = \"/Users/sofiamoniz/Documents/aula_react/src/pages/TODOList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TODOList() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = React.useState(null);\n\n  const addNewTask = () => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const checkTasks = () => {\n    if (tasks.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            marginTop: \"5%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6\",\n                children: tasks.map(entry => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: entry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  {\n    /* \n    const checkTasks = () => {\n       if(tasks.length){\n           return( \n               <div>\n                   {tasks.map(entry =>\n                       <p>{entry}</p>\n                   )}\n               </div>\n           )\n       }\n       else{\n           return(<p>Nothing to do!</p>)\n       }\n    }\n    */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your TODO list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control input-normal\",\n                placeholder: \"insert new task\",\n                value: newTask,\n                onChange: event => setNewTask(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                onClick: addNewTask,\n                value: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), checkTasks()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TODOList, \"I6Ja6boGNThdl33TPQ1rJty9HWU=\");\n\n_c = TODOList;\nexport default TODOList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TODOList\");","map":{"version":3,"sources":["/Users/sofiamoniz/Documents/aula_react/src/pages/TODOList.js"],"names":["React","useEffect","useState","TODOList","tasks","setTasks","newTask","setNewTask","addNewTask","checkTasks","length","marginTop","map","entry","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACE,QAAN,CAAe,IAAf,CAA9B;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAG,MAAM;AACrB,QAAIL,KAAK,CAACM,MAAV,EAAiB;AACb,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAA5B;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,0BACKP,KAAK,CAACQ,GAAN,CAAUC,KAAK,iBACZ;AAAA,4BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBADH;AADL;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACI;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAoB,kBAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;AACJ,GArBD;;AAuBA;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAO;AAEH,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAACF,UAAAA,SAAS,EAAC;AAAX,SAA5B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,2BAA7B;AAAyD,gBAAA,WAAW,EAAC,iBAArE;AAAuF,gBAAA,KAAK,EAAEL,OAA9F;AAAuG,gBAAA,QAAQ,EAAGQ,KAAD,IAAWP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,OAAO,EAAER,UAA9B;AAA0C,gBAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAgBKC,UAAU,EAhBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GApEQN,Q;;KAAAA,Q;AAsET,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nfunction TODOList(){\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = React.useState(null);\n\n    const addNewTask = () => {\n        setTasks([...tasks, newTask]);\n    };\n\n    const checkTasks = () => {\n        if (tasks.length){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\" style={{marginTop:\"5%\"}}>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    {tasks.map(entry =>\n                                        <p>{entry}</p>\n                                    )}\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <input type=\"button\"value=\"Remove\" />\n                                </div>\n                            </div>\n                        </div> \n                    </div>\n                </div>\n            )\n        }\n    }\n\n    {/* \n    const checkTasks = () => {\n        if(tasks.length){\n            return( \n                <div>\n                    {tasks.map(entry =>\n                        <p>{entry}</p>\n                    )}\n                </div>\n            )\n        }\n        else{\n            return(<p>Nothing to do!</p>)\n        }\n    }\n    */}\n\n    return (\n        <div>\n            <h1>Your TODO list</h1>\n            <div className=\"container\">\n                <div className=\"row\" style={{marginTop:\"5%\"}}>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <input type=\"text\" className=\"form-control input-normal\" placeholder=\"insert new task\" value={newTask} onChange={(event) => setNewTask(event.target.value)} />\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <input type=\"button\" onClick={addNewTask} value=\"Add\" />\n                            </div>\n                        </div>\n                    </div> \n                </div>\n            </div>\n            {checkTasks()}\n        </div>\n    );\n}\n\nexport default TODOList;"]},"metadata":{},"sourceType":"module"}