{"ast":null,"code":"var _jsxFileName = \"/Users/sofiamoniz/Documents/aula_react/src/pages/DriverDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DriverDetails() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [driverDetails, setDriverDetails] = React.useState([]);\n  const [driverRaces, setDriverRaces] = React.useState([]);\n\n  const fetchState = async () => {\n    const fetchItem = await fetch('http://192.168.160.58/Formula1/api/Drivers/Driver?id=' + id);\n    const item = await fetchItem.json();\n    setDriverDetails(item);\n    setDriverRaces(item.Races);\n  };\n\n  const retrieveRaces = () => {\n    if (driverRaces.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '5%',\n            marginBottom: '5%'\n          },\n          children: \"Races:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Circuit Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Race Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: driverRaces.map(race => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: race.CircuitName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: race.Year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: race.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, race.RaceId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const retrieveImage = image => {\n    if (image != null) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"new\",\n        style: {\n          width: 200,\n          height: 'auto',\n          marginTop: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    fetchState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [driverDetails.Name && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: '5%'\n        },\n        children: driverDetails.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), retrieveImage(driverDetails.ImageUrl), driverDetails.Nationality && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nationality: \", driverDetails.Nationality]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), driverDetails.Url && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: driverDetails.Url,\n        children: \"Click here to know more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), retrieveRaces()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DriverDetails, \"Q1okSsTq42KgRjk7Cy7x5BoBa5A=\", false, function () {\n  return [useParams];\n});\n\n_c = DriverDetails;\nexport default DriverDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverDetails\");","map":{"version":3,"sources":["/Users/sofiamoniz/Documents/aula_react/src/pages/DriverDetails.js"],"names":["React","useEffect","useParams","DriverDetails","id","driverDetails","setDriverDetails","useState","driverRaces","setDriverRaces","fetchState","fetchItem","fetch","item","json","Races","retrieveRaces","length","marginTop","marginBottom","map","race","CircuitName","Year","Name","RaceId","retrieveImage","image","width","height","ImageUrl","Nationality","Url"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\n\n\nfunction DriverDetails(){\n\n    const { id } = useParams()\n    const [driverDetails, setDriverDetails] = React.useState([]);\n    const [driverRaces, setDriverRaces] = React.useState([]);\n\n    const fetchState = async () => {\n        const fetchItem = await fetch('http://192.168.160.58/Formula1/api/Drivers/Driver?id=' + id);\n        const item = await fetchItem.json();\n        setDriverDetails(item);\n        setDriverRaces(item.Races);\n    };\n\n    const retrieveRaces = () => {\n        if(driverRaces.length > 0){\n            return (\n                <div>\n                    <h3 style={{marginTop: '5%', marginBottom:'5%'}}>Races:</h3>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Circuit Name</th>\n                                <th scope=\"col\">Year</th>\n                                <th scope=\"col\">Race Name</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {driverRaces.map(race =>\n                                <tr key={race.RaceId}>\n                                    <td>{race.CircuitName}</td>\n                                    <td>{race.Year}</td>\n                                    <td>{race.Name}</td>\n                                    <td></td>\n                                </tr>\n                            )}  \n                        </tbody>\n                    </table>\n                </div>\n            )\n        }\n        \n    }\n\n    const retrieveImage = (image) =>{\n        if(image != null){\n            return(\n                <img \n                    src={image}\n                    alt=\"new\"\n                    style={{width: 200, height: 'auto', marginTop:10}}\n                />\n            )\n        }\n    }\n\n    useEffect(() => {\n        fetchState();\n    },[])\n\n    return(\n        <div>\n            <div>\n                {driverDetails.Name &&\n                    <h1 style={{marginTop:'5%'}}>{driverDetails.Name}</h1>\n                }\n                {retrieveImage(driverDetails.ImageUrl)}\n                {driverDetails.Nationality &&\n                    <p>Nationality: {driverDetails.Nationality}</p>\n                }\n                {driverDetails.Url &&\n                    <a href={driverDetails.Url}>Click here to know more</a>\n                }\n                {retrieveRaces()}\n            </div>\n        </div>\n    )\n    \n   \n}\n\nexport default DriverDetails;"]},"metadata":{},"sourceType":"module"}